#!/usr/bin/env sh
#wconnect

dir=$(dirname -- "$0")
NETWORK_CREDENTIALS_FILE="$dir/wpass.conf"

# WPA Supplicant config file
WPA_SUPPLICANT_CONF="/etc/wpa_supplicant.conf"

# Function to send a notification using the send_notification script
send_notification() {
    message="$1"
    summary="$2"
    sendnotification --summary "$summary" "$message" > /dev/null
}

get_password() {
    network_name="$1"
    password=$(grep "^$network_name=" "$NETWORK_CREDENTIALS_FILE" | cut -d'=' -f2)

    if [ -z "$password" ]; then
        # Prompt the user for the password
        password=$(echo "" | dmenu -p "Enter password for $network_name:" -nb "#2e3440" -nf "#d8dee9" -sb "#5e81ac" -sf "#eceff4")
        if [ -z "$password" ]; then
            send_notification "No password provided." "Error"
            exit 1
        fi
    else
        send_notification "Password found for $network_name." "Info"
    fi
    echo "$password"
}


# Check if necessary tools are available
for cmd in wpa_supplicant wpa_passphrase dmenu; do
    if ! command -v sudo $cmd > /dev/null 2>&1; then
        send_notification "$cmd not found. Please install it." "Error"
        exit 1
    fi
done

# Get the interface name
interface=$(ip a | grep -iP "^\d: " | grep -P "state (UP|DOWN)" | grep "UP>" | grep "qlen" | grep -iPo "\d: \K\w+(?=:)")
if [ -z "$interface" ]; then
    send_notification "No wireless interface found." "Error"
    exit 1
fi


while true; do
    networks=$(wscan)
    if [ -z "$networks" ]; then
        send_notification "No Wi-Fi networks found." "Error"
        exit 1
    fi

    selected_network=$(echo "$networks" | dmenu -l 10 -p "Select Wi-Fi network:")
    if [ -z "$selected_network" ]; then
        send_notification "No network selected." "Info"
        exit 1
    fi

    network_name=$(echo "$selected_network" | grep -Po "^\[.*\]\ \K.*$")
    current_network=$(sudo iwgetid -r)
    if [ "$current_network" = "$network_name" ]; then
        send_notification "Already connected to $network_name." "Info"
        exit 0
    fi

    password=$(get_password "$network_name")

    wdown
    sleep 2

    network_config=$(wpa_passphrase "$network_name" "$password")
    echo "$network_config" | sudo tee "$WPA_SUPPLICANT_CONF" > /dev/null

    # Reconfigure wpa_supplicant
    if wup n > /dev/null 2>&1; then
        send_notification "Successfully connected to $network_name." "Success"
				 if ! grep -q "^$network_name=" "$NETWORK_CREDENTIALS_FILE"; then
            echo "$network_name=$password" | tee -a "$NETWORK_CREDENTIALS_FILE"
            send_notification "Network $network_name saved to credentials file." "Success"
        fi
        exit 0
    else
        send_notification "Failed to connect to $network_name." "Error"
        retry=$(echo "Yes\nNo" | dmenu -p "Retry connection?")
        if [ "$retry" != "Yes" ]; then
            exit 1
        fi
    fi
done


# net=$(wscan | dmenu -l 20)
# [ "$net" = "" ] && exit 0
# [ "$net" = "!" ] && exec wconnect
# if sudo iwgetid -r wlp8s0 -c> /dev/null; then
# 	c=$(sudo iwgetid -r wlp8s0)
# 	[ "$c" = "$net" ] && exit 0
# fi
# found=0
# dir=$(dirname -- "$0")
# passwordfile="$dir/wpass.conf"
# if grep "$net" "$passwordfile"; then
# 	pass=$(grep "$net" "$passwordfile" | grep -Po "(?<=\=\")\K.*(?=\"$)" )
# 	found=1
# else
# 	pass=$(echo 'Choose another network?\nQuit' | dmenu -p "Enter password")
# 	[ "$pass" = "Choose another network\?" ] && exec wconnect
# 	[ "$pass" = "Quit" ] && exit 0
# fi
# wdown
# sleep 2
# wpa_passphrase "$net" "$pass" | sudo tee /etc/wpa_supplicant.conf
# if wup n ; then
# 	[ "$found" = "1" ] || echo "$net=\"$pass\"" | sudo tee -a "$passwordfile"
# 	exit 0
# elif echo "Yes\nno" | dmenu -p "Failed to Connect. Retry?" | grep -Pi "^n"; then
# 	exit 1
# else
# 	exec wconnect
# fi
